Porblem link: https://leetcode.com/problems/valid-parentheses/

solution:
/**
 * @param {string} s
 * @return {boolean}
 */
 class Stack{
    constructor(){
        this.stack=new Array();
    }
    push(n){
        this.stack.push(n);
    }
    pop(){
        return this.stack.pop();
    }
    size(){
        return this.stack.length;
    }
    peek(){
        return this.stack[this.stack.length-1];
    }
 }
var isValid = function(s) {
    let stack=new Stack();
    let arr=s.split("");
    for(let i=0;i<arr.length;i++){
        if(arr[i]==='(' || arr[i]==='{' || arr[i]==='['){
            stack.push(arr[i]);
        }
        else if(arr[i]===')' && stack.peek()==='('){
            stack.pop();
        }
        else if(arr[i]==='}' && stack.peek()==='{'){
            stack.pop();
        }
        else if(arr[i]===']' && stack.peek()==='['){
            stack.pop();
        }
        else{
            stack.push(arr[i]);
        }
    }
    return stack.size()===0 ? true:false;
};